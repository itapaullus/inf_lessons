'''
№ 3
Январская снежинка

Формат входных данных
Единственная строка входных данных содержит восемь натуральных чисел xi (1⩽xi⩽20), записанных через пробел — длины лучей снежинки в порядке обхода по часовой стрелке.
Первое число соответствует направлению вверх. Обратите внимание, что центральная клетка тоже является частью луча.

Формат выходных данных
Выведите изображение заданной снежинки. Лучи отрисовываются с помощью символов '#' (ASCII код 35) на фоне символов '.' (ASCII код 46).
Программа не должна выводить строк или столбцов, состоящих только из символов фона.

5 5 5 5 5 5 5 5

#..........
.#.........
..#........
...#.......
....#......
.....#.....
......#.#..
.######*##.
......###..
.....#.#.#.
....#..#..#
...#...#...
..#........


#...#...#
.#..#..#.
..#.#.#..
...###...
####*####
...###...
..#.#.#..
.#..#..#.
#...#...#

'''
# ЗАДАЧА 3
inp = [int(i) for i in input().split()]
r1, r2, r3 = [inp[7], inp[0], inp[1]], [inp[6], '#', inp[2]], [inp[5], inp[4], inp[3]]
line_len = max(inp[7], inp[6], inp[5]) + max(inp[1], inp[2], inp[3]) - 1
row_count = max(inp[7], inp[0], inp[1]) + max(inp[5], inp[4], inp[3]) - 1
# сначала наберем все массивы
data = [['.' for i in range(line_len)] for j in range(row_count)]
x0, y0 = max(inp[6], inp[5], inp[7]) - 1, max(inp[7], inp[6], inp[5]) - 1

for x in reversed(range(1,x0+1)):
    if inp[0] > x:  # на 12 часов
        data[x0 - x][y0] = '#'
    if inp[1] > x:  # на 1 час
        data[x0 - x][y0 + x] = '#'
    if inp[2] > x:  # на 3 часа
        data[x0][y0 + x] = '#'
    if inp[6] > x:  # на 9 часов
        data[x0][y0 - x] = '#'
    if inp[4] > x:
        data[x0 + x][y0] = '#'
    if inp[5] > x:  # на 1 час
        data[x0 + x][y0 - x] = '#'
    if inp[3] > x:
        data[x0 + x][y0 + x] = '#'
    if inp[7] > x:  # на 11 часов
        data[x0 - x][y0 - x] = '#'
data[x0][y0] = '#'  # ставим первую #
print('\n'.join([''.join(i) for i in data]))
